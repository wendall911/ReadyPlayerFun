buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = 'gradle plugins'
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath 'se.bjurr.gitchangelog:git-changelog-gradle-plugin:1.64'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'se.bjurr.gitchangelog.git-changelog-gradle-plugin'
apply plugin: 'com.matthewprenger.cursegradle'

group = 'com.github.wendall911.readyplayerfun'
version = "${minecraft_version}-${mod_version}"
archivesBaseName = "${mod_name}"
def modid = "${modid}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: mappings_version

    runs {
        client = {
            workingDirectory = project.file("run").canonicalPath
            source sourceSets.main
        }
        server = {
            workingDirectory = project.file("run").canonicalPath
            source sourceSets.main
        }
    }    
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

jar {
    manifest {
        attributes([
            "Specification-Title": "${mod_name}",
            "Specification-Vendor": "${mod_author}",
            "Specification-Version": "${version}",
            "Implementation-Title": "${mod_name}",
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"${mod_author}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:deprecation', '-Xlint:unchecked']
}

curseforge {
    apiKey = project.rpfcurseApiKey
    project {
        id = project.rpfcurseId
        changelog = file('build/libs/' + project.getName() + '-' + version + '-changelog.txt')
        releaseType = cf_release_type
        addGameVersion(minecraft_version)
        mainArtifact(jar) {
            relations {
                optionalLibrary 'serene-seasons'
            }
        }
    }
}

tasks.curseforge.dependsOn build

task changelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
	file = new File('build/libs/' + project.getName() + '-' + version + '-changelog.txt');
    templateContent = file('files/templates/changelog.mustache').getText('UTF-8');
	toRef = "${mod_version}";
	fromRef = "${last_mod_version}";
}

tasks.build.dependsOn('changelog')

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    from (sourceSets.main.output) {
        include 'LICENSE'
    }

    classifier = 'src'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

sourceSets {
    main {
        resources {
            srcDir 'resources'
        }   
    }   
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        // replaces
        expand ([
            'modid': modid,
            'mod_version': version,
            'mod_author': mod_author
        ])
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

